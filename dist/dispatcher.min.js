angular.module("dispatcher",[]).service("dispatcher",function(r){var t,e,n,i,o,a,c,s,h,u;return u={},o={},a={},c=1,i=!1,h="ID_",e=[],t=null,s=null,n=function(r){var e,n;a[r]=!0;try{u[r](t,s)}catch(n){e=n,console.error(e)}return o[r]=!0},{register:function(r,t){if(t||(t=""+h+c++),t in u)throw new Error("dispatcher.register(...): a store is already registered under "+t+".");return u[t]=r,t},waitFor:function(r){var t,e,o,c;if(!i)throw new Error("dispatcher.waitFor(...): must be called only while dispatching.");for(_.isArray(r)||(r=[r]),o=[],t=0,e=r.length;e>t;t++){if(c=r[t],a[c])throw new Error("dispatcher.waitFor(...): circular dependency detected while waiting for "+c);o.push(n(c))}return o},replay:function(r){var t,e,n,i;for(i=[],t=0,e=r.length;e>t;t++)n=r[t],i.push(this.dispatch(n.action,n.payload));return i},unregister:function(r){if(!(r in u))throw new Error("dispatcher.unregister(...): "+r+" is not a registered.");return delete u[r]},dispatch:function(t,n){var o,c,s;if(window.__DEV__&&(console.debug("Dispatch: "+t.name,n),r.check(n,t.schema),e.push({action:t,payload:n})),i)throw new Error("dispatcher.dispacth(...): Cannot dispacth while dispatching");for(this.startDispatching(t,n),o=0,c=u.length;c>o;o++)s=u[o],a[s]||this.invoke(s);return this.stopDispatching()},isDispatching:function(){return i},startDispatching:function(r,t){var e,n,c,s;for(i=!0,r=r,t=t,c=[],e=0,n=u.length;n>e;e++)s=u[e],o[s]=!1,c.push(a[s]=!1);return c},stopDispatching:function(){return i=!1,t=null,s=null}}}),angular.module("dispatcher").service("dataContract",function(){return{check:function(r,t){var e,n,i,o;if(!_.isString(t)){i=[];for(e in t)if(n=t[e],_.isArray(n)){if(!_.isArray(r[e]))throw console.error("Contract breach: "+e+": ",r[e]),Error("Contract breach: expect '"+e+"' ("+n+") to be an array, instead found "+typeof r[e]);i.push(function(){var t,i,a,c;for(a=r[e],c=[],t=0,i=a.length;i>t;t++)o=a[t],c.push(this.check(o,n[0]));return c}.call(this))}else if(_.isObject(n))i.push(this.check(r[e],n));else{if(r[e]&&typeof r[e]!==n)throw console.error("Contract breach: "+e+": ",r[e]),Error("Contract breach: expect '"+e+"' ("+r[e]+") to be a "+n+", instead found "+typeof r[e]);i.push(void 0)}return i}if(typeof r!==t)throw console.error("Contract breach: "+r+": ",r),Error("Contract breach: expect "+r+" to be of type "+t+", instead found "+typeof r)}}});