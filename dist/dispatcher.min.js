angular.module("dispatcher",[]).service("dispatcher",function(t){var i;return this.registry={},this.isHandled={},this.isPending={},this.lastID=1,this.isDispatching=!1,this.prefix="ID_",this.dispatcher_logs=[],i=function(t){var i,r;this.isPending[t]=!0;try{this.registry[t](this.action,this.payload)}catch(r){i=r,console.error(i)}return this.isHandled[t]=!0},{register:function(t,i){if(i||(i=""+this.prefix+this.lastID++),i in this.registry)throw new Error("dispatcher.register(...): a store is already registered under "+i+".");return this.registry[i]=t,i},waitFor:function(t){var r,s,e,n;if(!this.isDispatching)throw new Error("dispatcher.waitFor(...): must be called only while dispatching.");for(_.isArray(t)||(t=[t]),e=[],r=0,s=t.length;s>r;r++){if(n=t[r],this.isPending[n])throw new Error("dispatcher.waitFor(...): circular dependency detected while waiting for "+n);e.push(i(n))}return e},replay:function(t){var i,r,s,e;for(e=[],i=0,r=t.length;r>i;i++)s=t[i],e.push(this.dispatch(s.action,s.payload));return e},unregister:function(t){if(!(t in this.registry))throw new Error("dispatcher.unregister(...): "+t+" is not a registered.");return delete this.registry[t]},dispatch:function(i,r){var s,e,n,h;if(window.__DEV__&&(console.debug("Dispatch: "+i.name,r),t.check(r,i.schema),this.dispatcher_logs.push({action:i,payload:r})),this.isDispatching)throw new Error("dispatcher.dispacth(...): Cannot dispacth while dispatching");for(this.startDispatching(i,r),n=this.registry,s=0,e=n.length;e>s;s++)h=n[s],this.isPending[h]||this.invoke(h);return this.stopDispatching()},isDispatching:function(){return this.isDispatching},startDispatching:function(t,i){var r,s,e,n,h;for(this.isDispatching=!0,this.action=t,this.payload=i,e=this.registry,n=[],r=0,s=e.length;s>r;r++)h=e[r],this.isHandled[h]=!1,n.push(this.isPending[h]=!1);return n},stopDispatching:function(){return this.isDispatching=!1,this.action=null,this.payload=null}}}),angular.module("dispatcher").service("dataContract",function(){return{check:function(t,i){var r,s,e,n;if(!_.isString(i)){e=[];for(r in i)if(s=i[r],_.isArray(s)){if(!_.isArray(t[r]))throw console.error("Contract breach: "+r+": ",t[r]),Error("Contract breach: expect '"+r+"' ("+s+") to be an array, instead found "+typeof t[r]);e.push(function(){var i,e,h,a;for(h=t[r],a=[],i=0,e=h.length;e>i;i++)n=h[i],a.push(this.check(n,s[0]));return a}.call(this))}else if(_.isObject(s))e.push(this.check(t[r],s));else{if(t[r]&&typeof t[r]!==s)throw console.error("Contract breach: "+r+": ",t[r]),Error("Contract breach: expect '"+r+"' ("+t[r]+") to be a "+s+", instead found "+typeof t[r]);e.push(void 0)}return e}if(typeof t!==i)throw console.error("Contract breach: "+t+": ",t),Error("Contract breach: expect "+t+" to be of type "+i+", instead found "+typeof t)}}});